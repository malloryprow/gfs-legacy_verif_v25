      SUBROUTINE S1COMP(MODEL,O,F,O2,F2,IDIM,JDIM,IDIM2,JDIM2,
     1 NET,JNET,S1,S1B,SGRAD)
C SUBPROGRAM:    S1COMP
C   PRGMMR: ROBERT HIRANO    ORG: W/NMC42    DATE: 88-12-14
C
C ABSTRACT: CALCULATE S1 SCORES FOR MODEL VERIFICATION NETWORKS
C           (GFS,AVN HAVE 14 AREAS WHEREAS THE NGM AND LFM HAVE 9).
C
C PROGRAM HISTORY LOG:
C   88-12-14  ROBERT HIRANO
C   92-06-23  ROBERT HIRANO      SPEC VFCN RGNAR1, DROP EUROPE
C
C USAGE:    CALL S1COMP(MODEL,O,F,O2,F2,IDIM,JDIM,IDIM2,JDIM2,NET,JNET,S1,S1B,SGRAD)
C   INPUT ARGUMENT LIST:
C     MODEL    - MODEL ID (1=GFS,2=AVN,3=NGM,4=LFM)
C     O        - THE VERIFYING FIELD
C     F        - THE FORECAST FIELD (FM IS 53,45)
C     O2       - THE VERIFYING FIELD ON A 38X17 2.5 DEG LOLA GRID FOR ETA,NGM
C              - 65X65 FOR THE AVN,GFS
C     F2       - THE FORECAST FIELD ON A 38X17 2.5 DEG LOLA GRID FOR ETA,NGM
C              - 65X65 FOR THE AVN,GFS
C     IDIM     - COLUMN DIMENSION OF FIELD
C     JDIM     - ROW DIMENSION OF FIELD
C     IDIM2    - COLUMN DIMENSION OF FIELD2
C     JDIM2    - ROW DIMENSION OF FIELD2
C     JNET     - NUMBER OF LATLON NETWORKS IN LOOP
C     NET      - TOTAL NUMBER OF VERIFICATION NETWORKS TO DO
C
C   OUTPUT ARGUMENT LIST:
C     S1       - S1 SCORES FOR THE VERIFICATION AREAS
C     S1B      - ALTERNATE S1 SCORE (W.R.T. ANL GRAD)
C     SGRAD    - GRADIENT INFO FOR THE VERIFICATION AREAS
C
C   SUBPROGRAM CALLED:
C     UNIQUE:   - AFILL, S1RECT, S1IREG
C     LIBRARY:    (NONE)
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN-90
C   MACHINE:  IBM RS6000
C
C$$$
C
       PARAMETER  (MXNET=14)
       REAL     O(IDIM,JDIM),F(IDIM,JDIM)
       REAL     OO(9,7),FF(9,7),OE(29,15),FE(29,15)
       REAL     O2(IDIM2,JDIM2),F2(IDIM2,JDIM2)
       REAL     OG(IDIM2,JDIM2),FG(IDIM2,JDIM2),W1(65,65),W2(65,65)
       REAL     OL(145,37),FL(145,37),OX(53,45),FX(53,45)
       REAL     S1(NET),S1B(NET),SGRAD(4,NET)
       INTEGER  IB7(7),IE7(7),IB17(17),IE17(17),IB12(13),
     1          IE12(13),IB21(21),IE21(21),IB15(15),IE15(15),
     2          IB09(9),IE09(9),IB18(18),IE18(18),
     3          NPTS(MXNET)
C
       COMMON /LIMITS/ IBGN(146),IEND(146),JBGN(12),JEND(12),
     1         IBRGN,IERGN,JBRGN,JERGN,
     2         KBGBL,KEGBL,LBGBL,LEGBL,KBLL,KELL,LBLL,LELL,NPTS
C
 200    FORMAT(10X,'.....JAREA= ',I2,4X,'S1= ',F6.2,4X,'S1B= ',F6.2)
C
       CALL AFILL(S1,NET,1,1,.0)
       CALL AFILL(S1B,NET,1,1,.0)
       CALL AFILL(SGRAD,4,NET,1,.0)
C
C*      DUPLICATE GFS AND AVN FIELDS
C
       IF(MODEL  .LE.  2) THEN
        LOOP60: DO J = 1,JDIM
        LOOP62: DO I = 1,IDIM
        OL(I,J) = O(I,J)
        FL(I,J) = F(I,J)
        END DO LOOP62
        END DO LOOP60
       ENDIF
       IF(MODEL .GT. 2) THEN

         JX=8
         DO J=1,17
            JX=JX+1
            IX=86
            DO I=1,38
               IX=IX+1
               OL(IX,JX)=O2(I,J)
               FL(IX,JX)=F2(I,J)
            ENDDO
         ENDDO
       ENDIF
C
C*   CALCULATE S1 SCORE FOR REGIONAL AREA 1 OR GLOBAL
C*     AREA 1 (INTERP 2.5 LATLON GRID TO 65X65 GRID FIRST)
C
       JAREA = 1
       XPTS = NPTS(JAREA)
       IF(MODEL  .LE.  2) THEN
         CALL S1RECT(O2,F2,65,65,KBGBL,KEGBL,LBGBL,LEGBL,1,1,
     1             S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ELSE
        CALL S1RECT(O,F,53,45,IBRGN,IERGN,JBRGN,JERGN,1,1,
     1             S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ENDIF
C
        S1(JAREA) = S1SCR
        S1B(JAREA) = S1SCRB
        SGRAD(1,JAREA) = SERR / XPTS
        SGRAD(2,JAREA) = SGRD / XPTS
        SGRAD(3,JAREA) = SGTRU / XPTS
        SGRAD(4,JAREA) = SGF2A

C*   CALCULATE S1 SCORES FOR ............
C*     1. 5 DEG LAT, 10 DEG LON NETWORKS (63PT NETWORK)
C*       FIRST, EXTRACT 5 DEG LAT, 10 DEG LON (63PT GRID) FIELD
C*       (IF FINE MESH, MUST INTERPOLATE TO 2.5 DEG LAT LON)
C*     2. 2.5 DEG LATLON NETWORKS (NAMR,59A,W33A,E33A)
C*        FOR GLOBAL ADD ALSO ASIA,NPAC,ALSK,NATL,EURP AREAS
C
C*   THE 63-POINT GRID IS GENERATED AT THE SAME TIME THE FINE MESH
C*   GRID IS CALLED.  NO LONGER ANY NEED TO INTERPOLATE TO THE 2.5
C*   DEGREE LON-LAT.  THE 63-POINT GRID IS GENERATED IN GETGRIB AND
C*   IS PASSED TO S1COMP FROM S1EVAL.
C
       JJ = 0
       LOOP10: DO J = 11,23,2
       JJ = JJ + 1
       II = 0
       LOOP12: DO I = 87,119,4
       II = II + 1
       OO(II,JJ) = OL(I,J)
       FF(II,JJ) = FL(I,J)
       END DO LOOP12
       END DO LOOP10
C
       ISUM = 0
       LOOP20: DO J = 1,JNET
       LOOP24: DO MX=1,1
       XPTS = NPTS(J+1)
       JM4 = J - 4
       JB = JBGN(J)
       JE = JEND(J)
       JDMN = JE - JB + 1
C
C* BELOW IS THE CALL TO S1IREG FOR THE SUBSETS OF THE 63-POINT GRID
C
       IF(J  .LE.  4) THEN
        IDM = 9
        JDM = 7
        LOOP22: DO I = 1,JDMN
        II = ISUM + I
        IB7(I) = IBGN(II)
        IE7(I) = IEND(II)
        END DO LOOP22
        CALL S1IREG(OO,FF,IB7,IE7,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
        EXIT LOOP24

C* BELOW ARE THE CALLS TO S1IREG FOR THE SUBSETS OF THE 2.5 DEG
C* LON-LAT GRID
C
       ELSE
        IDM = 145
        JDM = 37
CCC     GO TO (31,32,32,32,33,34,35,36) JM4
       IF( JM4 .EQ. 1) THEN
          LOOP40: DO I = 1,JDMN
          II = ISUM + I
           IB17(I) = IBGN(II)
           IE17(I) = IEND(II)
          END DO LOOP40
        CALL S1IREG(OL,FL,IB17,IE17,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
        ENDIF
       IF( JM4 .GE. 2  .AND.  JM4 .LE. 4) THEN
          LOOP42: DO I = 1,JDMN
          II = ISUM + I
           IB12(I) = IBGN(II)
           IE12(I) = IEND(II)
          END DO LOOP42
        CALL S1IREG(OL,FL,IB12,IE12,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ENDIF
       IF( JM4 .EQ. 5) THEN
          LOOP44: DO I = 1,JDMN
          II = ISUM + I
           IB21(I) = IBGN(II)
           IE21(I) = IEND(II)
          END DO LOOP44
        CALL S1IREG(OL,FL,IB21,IE21,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGRDF)
       ENDIF
       IF( JM4 .GE. 6) THEN
          LOOP46: DO I = 1,JDMN
          II = ISUM + I
           IB15(I) = IBGN(II)
           IE15(I) = IEND(II)
          END DO LOOP46
        CALL S1IREG(OL,FL,IB15,IE15,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ENDIF
       IF( JM4 .GE. 7) THEN
          LOOP48: DO I = 1,JDMN
          II = ISUM + I
           IB09(I) = IBGN(II)
           IE09(I) = IEND(II)
          END DO LOOP48
        CALL S1IREG(OL,FL,IB09,IE09,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ENDIF
       IF( JM4 .GE. 8) THEN
          LOOP50: DO I = 1,JDMN
          II = ISUM + I
           IB18(I) = IBGN(II)
           IE18(I) = IEND(II)
          END DO LOOP50
        CALL S1IREG(OL,FL,IB18,IE18,IDM,JDM,JB,JE,JDMN,
     1              S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
       ENDIF
C
       ENDIF
C
       END DO LOOP24
       JARP1  = JAREA + J
       S1(JARP1) = S1SCR
       S1B(JARP1) = S1SCRB
        SGRAD(1,JARP1) = SERR / XPTS
        SGRAD(2,JARP1) = SGRD / XPTS
        SGRAD(3,JARP1) = SGTRU / XPTS
        SGRAD(4,JARP1) = SGF2A
       ISUM = ISUM + JDMN
C
C*     END OF BASIC LATLON NETWORK LOOP .....
       END DO LOOP20
C
       IF(MODEL  .LE.  2) THEN
       JAREA = 14
       XPTS = NPTS(JAREA)
       CALL AFILL(OX,53,45,1,0.)
       CALL AFILL(FX,53,45,1,0.)
       CALL INTRFM(O,145,37,OX,1)
       CALL INTRFM(F,145,37,FX,1)
       CALL S1RECT(OX,FX,53,45,IBRGN,IERGN,JBRGN,JERGN,1,1,
     1             S1SCR,S1SCRB,SERR,SGRD,SGTRU,SGF2A)
C
       S1(JAREA) = S1SCR
       S1B(JAREA) = S1SCRB
        SGRAD(1,JAREA) = SERR / XPTS
        SGRAD(2,JAREA) = SGRD / XPTS
        SGRAD(3,JAREA) = SGTRU / XPTS
        SGRAD(4,JAREA) = SGF2A
       ENDIF
C
       RETURN
       END

